// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"

}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

enum Status {
  OPEN
  IN_PROGRESS
  CLOSED
}

model Issue {
  id                String   @id @default(uuid()) @db.Uuid
  title             String   @db.String(255)
  description       String   @db.String(255)
  status            Status   @default(OPEN)
  createdAt         DateTime @default(now()) @db.Timestamptz
  updatedAt         DateTime @updatedAt   @db.Timestamptz
  assignedToUserId  String?  @db.String(255)
  assignedToUser    User?    @relation(fields: [assignedToUserId], references: [id])
}


model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String(255)
  access_token       String?  @db.String(255)
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String(255)
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  assignedIssues Issue[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}